/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FN 4
#define MEDIA 5

// Behaviors config
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

// Keymaps
/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
// --------------------------------------------------------------------------------------------------------------- 
// | TAB  |  Q  |  W  |    E    |    R    |     T     |      |     Y    |     U      |  I     |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |    D    |    F    |     G     |      |     H    |     J      |  K     |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |    C    |    V    |     B     |      |     N    |     M      |  ,     |  .  |  /  | SHFT |
//                    | ALT/SYM | ESC/NUM | SPACE/NAV |      | ENT/CTRL | BSPC/MEDIA | GUI/FN |
                        
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R   &kp T               &kp Y &kp U   &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F   &kp G               &kp H &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V   &kp B               &kp N &kp M   &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &lt SYM LALT &lt NUM ESC &lt NAV SPACE   &mt RCTRL RET &mt MEDIA BSPC &lt FN RGUI
                        >;
                };
                num {
// todo move bt layer to media
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |     |  [  |  7  |  8  |  9  |  ]  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |     |  =  |  4  |  5  |  6  |  *  |  ;   |
// | SHFT |     |     |     |     |     |     |  +  |  1  |  2  |  3  |  /  |  $   |
//                    | ALT | HELD | SPC |    |  -  |  0  |  .  |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp LBKT  &kp N7  &kp N8 &kp N9  &kp RBKT &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp EQUAL &kp N4  &kp N5 &kp N6  &kp ASTRK &kp SEMI
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &kp PLUS  &kp N1  &kp N2 &kp N3  &kp FSLH &kp DLLR 
                                    &kp LALT     &trans       &kp SPACE      &kp RET  &trans   &kp RGUI
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | LALT |     | SPC |   | ENT |     | RGUI |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LALT &trans   &kp SPACE   &kp RET   &trans    &kp RGUI
                        >;
                };
        };
};
