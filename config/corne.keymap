/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FN 4

// Behaviors config
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

// Keymaps
/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
// --------------------------------------------------------------------------------------------------------------- 
// | TAB  |  Q  |  W  |    E    |    R    |     T     |      |     Y    |     U      |  I     |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |    D    |    F    |     G     |      |     H    |     J      |  K     |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |    C    |    V    |     B     |      |     N    |     M      |  ,     |  .  |  /  | SHFT |
//                    | ALT | ESC/NUM | SPACE/NAV |      | ENT/SHFT | BSPC/SYM | GUI/FN |
                        
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R   &kp T               &kp Y &kp U   &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F   &kp G               &kp H &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V   &kp B               &kp N &kp M   &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                 &kp LALT &lt NUM ESC &lt NAV SPACE   &lt LSHFT RET &lt SYM BSPC &lt FN RGUI
                        >;
                };
                
                num {
// // -----------------------------------------------------------------------------------------
// // |  ESC  |  1   |  2    | 3    |  4    | 5  |  #   |  6  |  7  |  8  |  9  |  0  |  BSPC |
// // |  CTRL | LGUI | LALT | LSHFT | LCTRL |    |  #   |     |     |     |     |     |       |
// // |  SHFT |      |      |       |       |    |  #   |     |     |     |     |     |       |
// //                       |       | HELD  |    |  #   |  -  |  0  |  .  |
                        bindings = <
   &kp ESC    &kp N1   &kp N2   &kp N3    &kp N4    &kp N5          &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
   &kp LCTRL  &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &trans          &trans &trans &trans &trans &trans &trans
   &kp LSHFT  &trans   &trans   &trans    &trans    &trans          &trans &trans  &trans &trans &trans &trans
                                &trans    &trans    &trans          &trans  &trans   &trans
                        >;
                };

                nav {
// // -----------------------------------------------------------------------------------------
// // | ESC   |    |    |    |    |      |  #   |        |   INS  |  DEL   |  PSCRN   | PG_UP   |  |
// // | CTRL  | LGUI   |  LALT  | LSHFT    | LCTRL    |      |  #   |  LEFT  |  DOWN  |  UP    |  RIGHT   | PG_DW   |  |
// // | SHFT  |    |    |    |    |      |  #   |        |  HOME  |  END   |          |         |  |
// //              |    |     | HELD     |  #   |        |        |        |
                        bindings = <
   &kp ESC    &trans       &trans       &trans       &trans       &trans         &trans &kp INS &kp DEL &kp PSCRN &kp PG_UP &trans
   &kp LCTRL  &kp LGUI       &kp LALT       &kp LSHFT       &kp LCTRL       &trans         &kp LEFT  &kp DOWN  &kp UP &kp RIGHT &kp PG_DN  &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans  &kp HOME  &kp END &trans &trans &trans
                                        &trans       &trans       &trans         &trans  &trans   &trans
                        >;
                };

                sym {
// // -----------------------------------------------------------------------------------------
// // | ESC      |    |    |    |    |                     | #  |  `  |  &  |  *  |  (  |  )  | BSPC |
// // | CTRL     | LGUI   | LALT  |  LSHFT  | LCTRL   |    | #  |  [  |  $  |  %  |  ^  |  \   |  '   |
// // | SHFT |   |    |    |    |                         | #  |  ]  |  !  |  @  |  #  |  "|" |  ~   |
// //            |    |    |                         | #  | _  |  HELD  |    | 
                        bindings = <
   &kp  ESC  &trans   &trans &trans   &trans   &trans      &kp GRAVE &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &kp LGUI   &kp LALT &kp LSHFT   &kp LCTRL   &trans      &kp LBKT &kp DLLR &kp PRCNT  &kp CARET &kp BSLH &kp SQT 
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp RBKT &kp EXCL &kp AT &kp HASH &kp PIPE &kp TILDE
                             &trans   &trans   &trans      &trans   &trans    &trans
                        >;
                };
                
                fn {
// // -----------------------------------------------------------------------------------------
// // | TAB    |   F12     |  F7  |   F8   |  F9  |         | #  | BT0  | BT1    | BT2    | BT3  | BT4  | BTCLR |
// // | LCTRL  |   F11     |  F4  |   F5   |  F6  |         | #  |      | LCTRL  | LSHFT  | LALT | LGUI |       |
// // | LSHFT  |   F10     |  F1  |   F2   |  F3  |         | #  |      |        |        |      |      |       |
// //                             |        |      |         | #  |      |        | HELD | 
                        bindings = <
   &kp TAB  &kp F12 &kp F7 &kp F8 &kp F9 &trans     &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR   
   &kp LCTRL &kp F11 &kp F4 &kp F5 &kp F6 &trans   &trans &kp LCTRL &kp LSHFT &kp LALT &kp LGUI &trans
   &kp LSHFT &kp F10 &kp F1 &kp F2 &kp F3 &trans   &trans &trans  &trans  &trans &trans &kp LSHFT
                           &kp LALT &trans  &trans   &trans   &trans  &trans
                        >;
                };
         };
};
                